# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # https://symfony.com/doc/current/routing.html#generating-urls-in-commands
    'env(ROUTER_REQUEST_CONTEXT_SCHEME)': 'https'
    'env(ROUTER_REQUEST_CONTEXT_PORT)': ''
    'env(ROUTER_REQUEST_CONTEXT_BASE_URL)': ''
    router.request_context.scheme: '%env(ROUTER_REQUEST_CONTEXT_SCHEME)%'
    router.request_context.host: '%env(ROUTER_REQUEST_CONTEXT_HOST)%'
    router.request_context.port: '%env(ROUTER_REQUEST_CONTEXT_PORT)%'
    router.request_context.base_url: '%env(ROUTER_REQUEST_CONTEXT_BASE_URL)%'
    asset.request_context.base_path: '%router.request_context.base_url%'

    'env(NGSI_LD_BROKER_NO_VERIFY)': false

    'env(MEASUREMENTS_PAGE_SIZE)': '1000'
    'env(MAX_NUMBER_OF_MEASUREMENTS_TO_LOAD)': '500'
    'env(INITIAL_DATA_WINDOW_SIZE)': '14400' # 4 * 60 * 60 seconds = 4 hours

    'env(DEFAULT_LOCALE)': 'en'
    default_locale: '%env(DEFAULT_LOCALE)%'

    app.path.images: /uploads/images
    app.path.cms_images: /uploads/cms/images
    app.cms.page.type.choices:
        'Onboarding guide': onboarding

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            $ngsiLdBrokerUrl: '%env(NGSI_LD_BROKER_URL)%'
            $ngsiLdBrokerOptions:
                no_verify: '%env(bool:NGSI_LD_BROKER_NO_VERIFY)%'

            $missionOptions:
                measurements_page_size: '%env(int:MEASUREMENTS_PAGE_SIZE)%'
                max_number_of_measurements_to_load: '%env(int:MAX_NUMBER_OF_MEASUREMENTS_TO_LOAD)%'
                initial_data_window_size: '%env(int:INITIAL_DATA_WINDOW_SIZE)%'

                mercure:
                    event_source_url: '%env(MERCURE_EVENT_SOURCE_URL)%'

            $sensorManagerOptions: []

            $subscriptionManagerOptions:
                router:
                    context:
                        scheme: '%env(ROUTER_REQUEST_CONTEXT_SCHEME)%'
                        host: '%env(ROUTER_REQUEST_CONTEXT_HOST)%'
                        port: '%env(ROUTER_REQUEST_CONTEXT_PORT)%'
                        base_url: '%env(ROUTER_REQUEST_CONTEXT_BASE_URL)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Faker,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\MissionListener:
        tags:
            -
                name: 'doctrine.event_listener'
                # this is the only required option for the lifecycle listener tag
                event: 'postPersist'

            -
                name: 'doctrine.event_listener'
                # this is the only required option for the lifecycle listener tag
                event: 'onFlush'

    App\EventListener\MeasurementListener:
        tags:
            -
                name: 'doctrine.event_listener'
                event: 'postPersist'

    App\EventListener\UpdatePublisher:
        tags:
            -
                name: 'doctrine.event_listener'
                event: 'postPersist'
